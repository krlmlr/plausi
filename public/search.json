[{"path":"/articles/stimmbeteiligung.html","id":"datenbezug","dir":"Articles","previous_headings":"","what":"Datenbezug","title":"Auffällige Stimmbeteiligungswerte identifizieren","text":"Der Reproduzierbarkeit halber baut das Beispiel auf offen verfügbaren Daten auf. Mit dem swissdd package können die Daten für einen Abstimmungstermin der Wahl bezogen werden.","code":"# Sys.getenv(\"https_proxy\") # Sys.setenv(https_proxy=\"\")  # Bezug der Resultate vom 27. September 2020 data <- swissdd::get_nationalvotes(votedates = c(\"2020-09-27\"))  # Alle möglichen Kombinationen von Vorlagen combinations <-as.data.frame(t(combn(unique(data$id),2)))  # Reduziere den Datensatz auf die Stimmbeteiligung und die Gebietsattribute  data_wide <- data %>%    select(id, canton_name,mun_name, mun_id, stimmbeteiligungInProzent) %>%    #Transformation ins Wide-format   pivot_wider(names_from=id,values_from=stimmbeteiligungInProzent) %>%    mutate_if(is.character,as.factor) %>%    #Nur Daten für den Kanton Zürich   filter(canton_name==\"Zürich\")  # Differenzen im Wide-Format # cross_fun(data_wide, combinations$V1[2],combinations$V2[2],geo_cols=c(\"canton_name\",\"mun_name\",\"mun_id\"))  # Berechne Stimmbeteiligungsdifferenzen diff <- get_differences(data_wide,combinations$V1,combinations$V2,geo_cols=c(\"canton_name\",\"mun_name\",\"mun_id\"))"},{"path":"/articles/stimmbeteiligung.html","id":"identifiziere-auffällige-stimmbeteiligungsdifferenzen","dir":"Articles","previous_headings":"","what":"Identifiziere auffällige Stimmbeteiligungsdifferenzen","title":"Auffällige Stimmbeteiligungswerte identifizieren","text":"Nun haben wir die Stimmbeteiligungsdifferenzen zwischen den verschiedenen Vorlagen für jedes Gebiet berechnet. einem nächsten Schritt können wir ausfindig machen, welche Gebiete statistisch auffällige Differenzen je Vorlagenkombination aufweisen. Hierfür nutzen wir die is_outlier_double_mad-Funktion aus dem plausi-Package. Ein Plot hilft dabei ein Bild von der Verteilung der Differenzen zu erhalten und besonders auffällige Werte zu erkennen.  Bei einigen Kombinationen bestehen Einzelfällen Unterschiede von gegen 3 Prozentpunkten.","code":"diff2 <- diff %>%    group_by(combination) %>%    # Threshold für Ausreisser : Abweichung von mehr als 5 medianen Abweichungen vom Median anstatt der üblichen 3.5.   mutate(outlier=is_outlier_double_mad(difference,thres=5)) ggplot(diff2, aes(combination, difference))+   geom_violin()+   geom_jitter(alpha=0.3, aes(color=outlier))+   theme_minimal()+   scale_fill_viridis_d() diff2 %>%    arrange(desc(abs(difference))) %>%    head() ## # A tibble: 6 × 6 ## # Groups:   combination [6] ##   canton_name mun_name       mun_id combination difference outlier ##   <fct>       <fct>          <fct>  <chr>            <dbl> <lgl>   ## 1 Zürich      Buch am Irchel 24     6310_6320         2.82 TRUE    ## 2 Zürich      Buch am Irchel 24     6320_6340        -2.82 TRUE    ## 3 Zürich      Regensberg     95     6340_6350        -2.54 TRUE    ## 4 Zürich      Buch am Irchel 24     6320_6330        -2.54 TRUE    ## 5 Zürich      Buch am Irchel 24     6320_6350        -2.54 TRUE    ## 6 Zürich      Regensberg     95     6310_6340         2.22 TRUE"},{"path":"/articles/stimmbeteiligung.html","id":"verantwortliche-vorlage-identifizieren","dir":"Articles","previous_headings":"","what":"Verantwortliche Vorlage identifizieren","title":"Auffällige Stimmbeteiligungswerte identifizieren","text":"Um herauszufinden welche der Vorlagen dazu führen, dass Kombinationen aufällig sind: Extrahiere Vorlage-Ids aus Kombinationen Formattiere Daten um um zählen zu können wie oft eine Vorlage auffälligen Kombinationen vorkommt. Ordne nach Häufigkeit","code":"problem_vorlagen <- diff2 %>%    separate(combination,into=c(\"vorlage1\",\"vorlage2\"), sep=\"_\") %>%    filter(outlier==TRUE) %>%    pivot_longer( cols = -c(canton_name,mun_name,mun_id, difference, outlier), names_to=\"vorlage\", values_to=\"vorlage_id\") %>%    group_by(mun_name,mun_id,vorlage_id) %>%    summarize(n=n()) %>%    arrange(desc(n))  problem_vorlagen ## # A tibble: 79 × 4 ## # Groups:   mun_name, mun_id [23] ##    mun_name             mun_id vorlage_id     n ##    <fct>                <fct>  <chr>      <int> ##  1 Buch am Irchel       24     6320           4 ##  2 Hüttikon             87     6320           4 ##  3 Oetwil am See        157    6320           4 ##  4 Regensberg           95     6340           4 ##  5 Bülach               53     6350           3 ##  6 Dorf                 26     6310           3 ##  7 Maschwanden          8      6340           3 ##  8 Schöfflisdorf        99     6340           3 ##  9 Thalheim an der Thur 39     6350           3 ## 10 Bachs                81     6330           2 ## # ℹ 69 more rows"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Lo Russo. Author, maintainer. Simon Graf. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lo Russo T, Graf S (2024). plausi: popular vote forensics. R package version 0.1.0.9999.","code":"@Manual{,   title = {plausi: popular vote forensics},   author = {Thomas {Lo Russo} and Simon Graf},   year = {2024},   note = {R package version 0.1.0.9999}, }"},{"path":"/index.html","id":"id_️-plausi-package","dir":"","previous_headings":"","what":"popular vote forensics","title":"popular vote forensics","text":"Detect Anomalies Vote-Results - powered Statistics & Machine Learning  Usage Plausi-Package ? Licensing Project team Feedback contributing","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"popular vote forensics","text":"Install R https://www.r-project.org/ 1. Install plausi-Package Installation gitlab: remotes::install_url(“https://gitlab.com/plausi_pkg/plausi.git”) 2. Explore methodology Documentation https://plausi.gitlab.io/plausi_pkg/","code":""},{"path":"/index.html","id":"what-does-the-plausi-package-do","dir":"","previous_headings":"","what":"What does the Plausi Package do?","title":"popular vote forensics","text":"Plausi package designed R-supported election forensics. provides functions enable identification statistical irregularities anomalies vote results. Key features include: Robust outlier detection small sample sizes skewed distributions Calculation differences possible combinations turnout-levels (e.g., systematic comparison voter turnout across voting districts) Prediction expected results using machine learning algorithms (e.g., yes-vote proportions, voter turnout, etc.) serves basis PlausiApp, used vote result quality control different Cantons (TG / SG / ZH). moment, PlausiApp made available upon request via private Repo (mailto:wahlen@statistik.zh.ch).","code":""},{"path":"/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"popular vote forensics","text":"package licensed MIT license.","code":""},{"path":"/index.html","id":"project-team","dir":"","previous_headings":"","what":"Project team","title":"popular vote forensics","text":"joint project Vote & Election-Team Team Data Statistical Office Canton Zurich. Responsible: Simon Graf, Thomas Lo Russo Thomas Knecht","code":""},{"path":"/index.html","id":"feedback-and-contributing","dir":"","previous_headings":"","what":"Feedback and contributing","title":"popular vote forensics","text":"love hear . Please share feedback let us know use code. can write email share ideas opening issue pull requests.","code":""},{"path":"/reference/DoubleMAD.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","title":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","text":"Suited find outliers asymetric distributions (contrast standard mad() function works symetric distributions ) https://eurekastatistics.com/using--median-absolute-deviation--find-outliers/","code":""},{"path":"/reference/DoubleMAD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","text":"","code":"DoubleMAD(x, zero.mad.action = \"warn\")"},{"path":"/reference/DoubleMAD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","text":"x numeric vector zero.mad.action defaults \"warn\" : MAD = 0 warning displayed","code":""},{"path":"/reference/DoubleMAD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","text":"numeric value","code":""},{"path":"/reference/DoubleMAD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Median Absolute Deviation from the Median for asymmetric distributions — DoubleMAD","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  DoubleMAD(x) #> [1] 2.0 1.5"},{"path":"/reference/DoubleMADsFromMedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","title":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","text":"Calculate distance value Median distribution term Median Absolute Deviations (MAD)","code":""},{"path":"/reference/DoubleMADsFromMedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","text":"","code":"DoubleMADsFromMedian(x, zero.mad.action = \"warn\")"},{"path":"/reference/DoubleMADsFromMedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","text":"x vector numeric values zero.mad.action action event MAD zero (Options: \"stop\", \"warn\", \"na\" \"warn na\")","code":""},{"path":"/reference/DoubleMADsFromMedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","text":"numeric vector","code":""},{"path":"/reference/DoubleMADsFromMedian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance of a value from the Median of a distribution in term of Median Absolute Deviations (MAD) — DoubleMADsFromMedian","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  DoubleMADsFromMedian(x) #>  [1]  2.5000000  2.0000000  1.5000000  1.5000000  1.0000000  1.0000000 #>  [7]  1.0000000  0.5000000  0.2500000  0.0000000  0.0000000  0.3333333 #> [13]  0.6666667  0.6666667  1.0000000  1.3333333  2.0000000  4.0000000 #> [19] 30.6666667 56.0000000"},{"path":"/reference/RMSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate RMSE — RMSE","title":"Calculate RMSE — RMSE","text":"Root Mean Square Error (RMSE) = standard deviation residuals (prediction errors).","code":""},{"path":"/reference/RMSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate RMSE — RMSE","text":"","code":"RMSE(m, o, na.rm = TRUE)"},{"path":"/reference/RMSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate RMSE — RMSE","text":"m predicted value (fitted modelling) o oserved 'true' value na.rm remove NA values, defaults TRUE","code":""},{"path":"/reference/RMSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate RMSE — RMSE","text":"numeric value","code":""},{"path":"/reference/RMSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate RMSE — RMSE","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(tidyr)  pred_data  <- predict_votes(c(\"Eidg1\",\"Kant1\"), votedata, exclude_votes=TRUE) #> Error in map(.x, .f, ...): ℹ In index: 1. #> Caused by error: #> ! Required packages are missing: earth  pred_data %>% drop_na() %>% group_by(vorlage) %>% summarize(rmse=RMSE(pred,real)) #> Error: object 'pred_data' not found"},{"path":"/reference/cross_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of the voter turnout difference between two vote topics (","title":"Calculation of the voter turnout difference between two vote topics (","text":"Calculation voter turnout difference two vote topics (\"Vorlagen\")","code":""},{"path":"/reference/cross_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of the voter turnout difference between two vote topics (","text":"","code":"cross_fun(df, vorl1, vorl2, geo_cols = geocols)"},{"path":"/reference/cross_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of the voter turnout difference between two vote topics (","text":"df data frame containing municipality ID voter turnout various proposals. column represents specific proposal, column names correspond proposal IDs (e.g., 'eidg1', 'kant2'). vorl1 character vector specifying proposal ID first proposal (e.g., \"eidg1\", \"kant2\"). proposal ID match column name dataset. vorl2 character vector specifying proposal ID second proposal (e.g., \"eidg1\", \"kant2\"). also correspond column name dataset. geocols Geo-Column also correspond column name dataset.","code":""},{"path":"/reference/cross_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of the voter turnout difference between two vote topics (","text":"Tibble turnout difference two vote topics","code":""},{"path":"/reference/cross_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of the voter turnout difference between two vote topics (","text":"","code":"testdata <- tibble(gemwkid = c(13,49,41,43,44), eidg1 = c(60.90,61.18,65.27,55.36,57.68), eidg2 = c(62.16,62.54,66.95,56.65,58.68), kant1 = c(57.73,60.27,63.31,51.93,54.49))  cross_fun(testdata,\"eidg1\",\"eidg2\") #> Error in dplyr::select(., tidyselect::all_of(geo_cols), !!varname): ℹ In argument: `tidyselect::all_of(geo_cols)`. #> Caused by error in `cross_fun()`: #> ! object 'geocols' not found   # generate combinations combinations <-as.data.frame(t(combn(c(\"eidg1\",\"eidg2\",\"kant1\"),2)))  # difference between columns named as the first combination cross_fun(crosscheckdata,combinations$V1[1],combinations$V2[1]) #> Error: object 'crosscheckdata' not found"},{"path":"/reference/get_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of voter turnout differences between all vote topics (","title":"Calculation of voter turnout differences between all vote topics (","text":"Calculation voter turnout differences vote topics (\"Vorlagen\")","code":""},{"path":"/reference/get_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of voter turnout differences between all vote topics (","text":"","code":"get_differences(df, vorl1, vorl2, geo_cols = c(\"gemwkid\", \"gemeinde\"))"},{"path":"/reference/get_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of voter turnout differences between all vote topics (","text":"df data frame containing municipality ID voter turnout various vote topics, vote topic separate column. vorl1 vector proposal IDs corresponding column names dataset (e.g., \"eidg1\", \"kant2\"). vorl2 vector proposal IDs (e.g., \"eidg1\", \"kant2\") comparison `vorl1`.","code":""},{"path":"/reference/get_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of voter turnout differences between all vote topics (","text":"tibble containing voter turnout differences possible combinations vote topics.","code":""},{"path":"/reference/get_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of voter turnout differences between all vote topics (","text":"","code":"library(tibble)  testdata <- tibble(gemwkid = c(13,49,41,43,44), eidg1 = c(60.90,61.18,65.27,55.36,57.68), eidg2 = c(62.16,62.54,66.95,56.65,58.68), kant1 = c(57.73,60.27,63.31,51.93,54.49))  single_difference(testdata,\"eidg1\",\"eidg2\") #> Error in single_difference(testdata, \"eidg1\", \"eidg2\"): could not find function \"single_difference\"   # generate combinations combinations <-as.data.frame(t(combn(c(\"eidg1\",\"eidg2\",\"kant1\"),2)))  # calculate all possible differences between columns  get_differences(testdata,combinations$V1,combinations$V2) #> Error in map2(.x, .y, .f, ...): ℹ In index: 1. #> Caused by error in `dplyr::select()`: #> ℹ In argument: `tidyselect::all_of(geo_cols)`. #> Caused by error in `tidyselect::all_of()`: #> ! Can't subset elements that don't exist. #> ✖ Element `gemeinde` doesn't exist."},{"path":"/reference/is_outlier_double_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","title":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","text":"Outlier detection based MAD asymetric distributions. Calculates separate MADs half distribution. Median Absolute Deviation robust normalization unit based median population center.","code":""},{"path":"/reference/is_outlier_double_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","text":"","code":"is_outlier_double_mad(value, thres = 3.5)"},{"path":"/reference/is_outlier_double_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","text":"value variable interest thres z-score threshold (defaults 3.5).","code":""},{"path":"/reference/is_outlier_double_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","text":"logical vector","code":""},{"path":"/reference/is_outlier_double_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Outliers via Median Absolute Deviation from the Median for asymmetric distributions — is_outlier_double_mad","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  isnt_outlier_double_mad(x) #> Error in isnt_outlier_double_mad(x): could not find function \"isnt_outlier_double_mad\""},{"path":"/reference/isnt_out_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-score with MAD — isnt_out_mad","title":"Z-score with MAD — isnt_out_mad","text":"Outlier detection based MAD. Median Absolute Deviation robust normalization unit based median population center. order use MAD “consistent estimator estimation standard deviation” one takes value multiplied factor.","code":""},{"path":"/reference/isnt_out_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-score with MAD — isnt_out_mad","text":"","code":"isnt_out_mad(x, thres = 3, na.rm = TRUE)"},{"path":"/reference/isnt_out_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-score with MAD — isnt_out_mad","text":"x variable interest thres z-score threshold (defaults 3, popular choice). na.rm remove NAs, defaults TRUE","code":""},{"path":"/reference/isnt_out_mad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-score with MAD — isnt_out_mad","text":"logical vector","code":""},{"path":"/reference/isnt_out_mad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z-score with MAD — isnt_out_mad","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  isnt_out_mad(x) #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #> [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE"},{"path":"/reference/isnt_out_turkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Tukey’s fences — isnt_out_turkey","title":"Tukey’s fences — isnt_out_turkey","text":"Tukey’s fences technique used box plots. non-outlier range defined [Q1−k(Q3−Q1), Q3+k(Q3−Q1)], Q1 Q3 lower upper quartiles respectively, k - nonnegative constant (popular choice 1.5).","code":""},{"path":"/reference/isnt_out_turkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tukey’s fences — isnt_out_turkey","text":"","code":"isnt_out_turkey(x, k = 1.5, na.rm = TRUE)"},{"path":"/reference/isnt_out_turkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tukey’s fences — isnt_out_turkey","text":"x variable interest k defaults 1.5 na.rm remove NAs, defaults TRUE","code":""},{"path":"/reference/isnt_out_turkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tukey’s fences — isnt_out_turkey","text":"logical vector","code":""},{"path":"/reference/isnt_out_turkey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tukey’s fences — isnt_out_turkey","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  isnt_out_turkey(x) #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #> [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE"},{"path":"/reference/isnt_out_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-score — isnt_out_z","title":"Z-score — isnt_out_z","text":"Z-score, also called standard score, observation broadly speaking distance population center measured number normalization units. default choice center sample mean normalization unit standard deviation.","code":""},{"path":"/reference/isnt_out_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-score — isnt_out_z","text":"","code":"isnt_out_z(x, thres = 3, na.rm = TRUE)"},{"path":"/reference/isnt_out_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-score — isnt_out_z","text":"x variable interest thres z-score threshold (defaults 3, popular choice). na.rm remove NAs, defaults TRUE","code":""},{"path":"/reference/isnt_out_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-score — isnt_out_z","text":"logical vector","code":""},{"path":"/reference/isnt_out_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z-score — isnt_out_z","text":"","code":"x <- c(1, 2, 3, 3, 4, 4, 4, 5, 5.5, 6, 6, 6.5, 7, 7, 7.5, 8, 9, 12, 52, 90)  isnt_out_z(x) #>  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #> [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE"},{"path":"/reference/outlier_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get boundaries beyond which a value is an outlier via Median Absolute Deviation from the Median for asymmetric distributions — outlier_range","title":"Get boundaries beyond which a value is an outlier via Median Absolute Deviation from the Median for asymmetric distributions — outlier_range","text":"Get boundaries beyond value outlier via Median Absolute Deviation Median asymmetric distributions","code":""},{"path":"/reference/outlier_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get boundaries beyond which a value is an outlier via Median Absolute Deviation from the Median for asymmetric distributions — outlier_range","text":"","code":"outlier_range(value, thres = 3.5, percent = TRUE)"},{"path":"/reference/outlier_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get boundaries beyond which a value is an outlier via Median Absolute Deviation from the Median for asymmetric distributions — outlier_range","text":"value variable interest thres z-score threshold (defaults 3.5, popular choice). percent defaults TRUE. Values zero set 0, values 100 100.","code":""},{"path":"/reference/outlier_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get boundaries beyond which a value is an outlier via Median Absolute Deviation from the Median for asymmetric distributions — outlier_range","text":"tibble numeric range","code":""},{"path":"/reference/predict_single_vote.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a model for a specific vote — predict_single_vote","title":"Train a model for a specific vote — predict_single_vote","text":"Train model specific vote","code":""},{"path":"/reference/predict_single_vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a model for a specific vote — predict_single_vote","text":"","code":"predict_single_vote(   x,   traindata,   testdata = NULL,   method = \"svmRadial\",   trControl = NULL,   to_exclude_vars = NULL,   geovars = c(\"gemeinde\", \"v_gemwkid\"),   testprop = NA,   ... )"},{"path":"/reference/predict_single_vote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a model for a specific vote — predict_single_vote","text":"x column name dependent variable traindata data used train model containing dependent variable predictor-columns testdata optional dataset structured identically trainingdataset prediction run. Defaults NULL, entails prediction run trainingdataset. method method available caret-package used prediction trControl parameters tune model to_exclude_vars variables excluded model geovars variables containing labels ids spatial units testprop optional argument generate training dataset splitting dataset (testprop=share observations randomly kept) ... optional parameters can passed caret::train function","code":""},{"path":"/reference/predict_single_vote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a model for a specific vote — predict_single_vote","text":"data.frame","code":""},{"path":"/reference/predict_single_vote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a model for a specific vote — predict_single_vote","text":"","code":"predict_single_vote(\"Eidg1\",votedata, to_exclude_vars = \"Kant1\") #> Loading required package: ggplot2 #> Loading required package: lattice #>  #> Attaching package: ‘caret’ #> The following object is masked from ‘package:plausi’: #>  #>     RMSE #> # A tibble: 171 × 5 #>    gemeinde           v_gemwkid  pred  real vorlage #>    <chr>                  <dbl> <dbl> <dbl> <chr>   #>  1 Adlikon                   21  23.5  21.5 Eidg1   #>  2 Adliswil                 131  47.4  48.3 Eidg1   #>  3 Aesch                    241  30.0  30.9 Eidg1   #>  4 Aeugst am Albis            1  33.4  31.5 Eidg1   #>  5 Affoltern am Albis         2  40.7  39.8 Eidg1   #>  6 Altikon                  211  28.9  29.8 Eidg1   #>  7 Andelfingen               30  33.0  32.1 Eidg1   #>  8 Bachenbülach              51  38.1  39.9 Eidg1   #>  9 Bachs                     81  31.4  30.5 Eidg1   #> 10 Bäretswil                111  32.6  33.3 Eidg1   #> # ℹ 161 more rows"},{"path":"/reference/predict_votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","title":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","text":"Run predictions multiple columns (specifically votes) dataset","code":""},{"path":"/reference/predict_votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","text":"","code":"predict_votes(   votes,   train,   test = NULL,   method = \"bagEarth\",   trControl = NULL,   exclude_votes = FALSE,   geovars = c(\"gemeinde\", \"v_gemwkid\"),   testprop = NA,   ... )"},{"path":"/reference/predict_votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","text":"votes names dependent variable-columns train data used train model containing variables predicted predictor-columns test optional dataset structured identically trainingdataset prediction method method available caret-package used prediction trControl parameters tune model exclude_votes TRUE variables predicted excluded others models geovars variables containing labels ids spatial units testprop optional argument generate training dataset splitting dataset (testprop=share observations randomly kept) ... optional parameters can passed caret::train function","code":""},{"path":"/reference/predict_votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","text":"data.frame","code":""},{"path":"/reference/predict_votes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run predictions for multiple columns (specifically votes) in a dataset — predict_votes","text":"","code":"predict_votes(c(\"Eidg1\",\"Kant1\"), votedata, exclude_votes=TRUE) #> Error in map(.x, .f, ...): ℹ In index: 1. #> Caused by error: #> ! Required packages are missing: earth"},{"path":"/reference/votedata.html","id":null,"dir":"Reference","previous_headings":"","what":"Test data containing past results and incomplete results for two votes — votedata","title":"Test data containing past results and incomplete results for two votes — votedata","text":"Test data containing past results incomplete results two votes","code":""},{"path":"/reference/votedata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test data containing past results and incomplete results for two votes — votedata","text":"","code":"votedata"},{"path":"/reference/votedata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test data containing past results and incomplete results for two votes — votedata","text":"dataframe 171 rows 79 columns. gemeinde municipality name v_gemwkid vote id Eidg1 Yes-Share going federal vote Kant1 Yes-Share going  cantonal vote v_.... yes shares past votes","code":""}]
